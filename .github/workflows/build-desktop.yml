name: Desktop Builds (Linux, macOS, Windows)

on:
  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0

  # Python version to use
  PYTHON_VERSION: 3.12.8

  # flet-cli version to install for `flet build`
  FLET_CLI_VERSION: 0.27.6

  # Ensures Python uses UTF-8 encoding by default
  PYTHONUTF8: 1

  # Disables rich text formatting in Flet CLI output
  FLET_CLI_NO_RICH_OUTPUT: 1

  # Disables progress bars when using UV
  UV_NO_PROGRESS: 1

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$FLET_CLI_VERSION flet_video

    - name: Patch for linux build
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev libmpv-dev mpv

    - name: Flet Build Linux
      run: |
        flet build linux --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: linux-build-artifact
        path: build/linux
        if-no-files-found: warn
        overwrite: false

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install the requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Flet Build Windows
      run: |
        pyinstaller --onedir --name AniPy --windowed --clean main.py

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-build-artifact
        path: dist/AniPy
        if-no-files-found: warn
        overwrite: false